name: CD R

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
  release:
    types:
      - published

permissions:
  contents: read

env:
  R_PACKAGE_DIR: ./r-phylo2vec

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Determine Version
        uses: ./.github/actions/determine-version
        id: determine-version
        with:
          event_name: ${{ github.event_name }}
          github_ref: ${{ github.ref }}
          language: 'r'
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: release
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: ${{ env.R_PACKAGE_DIR }}
          extra-packages: |
            any::devtools
            any::rextendr
      - name: Build R package
        run: |
          mkdir dist
          Rscript -e "rextendr::document('${{ env.R_PACKAGE_DIR }}')"
          Rscript -e "devtools::build('${{ env.R_PACKAGE_DIR }}', binary = TRUE, path = 'dist')"
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: r-package-windows
          path: dist/*.zip

  build-macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-14
            target: arm64
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Determine Version
        uses: ./.github/actions/determine-version
        id: determine-version
        with:
          event_name: ${{ github.event_name }}
          github_ref: ${{ github.ref }}
          language: 'r'
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: release
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: ${{ env.R_PACKAGE_DIR }}
          extra-packages: |
            any::devtools
            any::rextendr
      - name: Build R package
        run: |
          mkdir -p dist
          Rscript -e "rextendr::document('${{ env.R_PACKAGE_DIR }}')"
          Rscript -e "devtools::build('${{ env.R_PACKAGE_DIR }}', binary = TRUE, path = 'dist')"
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: r-package-macos-${{ matrix.platform.target }}
          path: dist/*.tgz

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Determine Version
        uses: ./.github/actions/determine-version
        id: determine-version
        with:
          event_name: ${{ github.event_name }}
          github_ref: ${{ github.ref }}
          language: 'r'
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: release
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: ${{ env.R_PACKAGE_DIR }}
          extra-packages: |
            any::devtools
            any::rextendr
      - name: Build R package
        run: |
          mkdir -p dist
          Rscript -e "rextendr::document('${{ env.R_PACKAGE_DIR }}')"
          Rscript -e "devtools::build('${{ env.R_PACKAGE_DIR }}', binary = TRUE, path = 'dist')"
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: r-package-linux
          path: dist/*.tar.gz

  release:
    name: Release R Package
    runs-on: ubuntu-latest
    environment: r-cran
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build-windows, build-macos, build-linux]
    permissions:
      id-token: write
      contents: write
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'r-package-*/*'
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: release
      - name: Upload to GitHub release
        if: "startsWith(github.ref, 'refs/tags/')"
        uses: softprops/action-gh-release@v1
        with:
          files: r-package-*/*

  test-release:
    name: Test R Package Release
    runs-on: ubuntu-latest
    environment: r-cran-test
    if: github.event_name != 'release'
    needs: [build-windows, build-macos, build-linux]
    permissions:
      id-token: write
      contents: write
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'r-package-*/*'
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: release
      - name: Install and test package
        run: |
          Rscript -e "pkg_file <- list.files('r-package-linux', full.names = TRUE)[1]; install.packages(pkg_file, repos = NULL, type = 'source')"
          Rscript -e "library(phylo2vec); sample(5, FALSE); print('Package loaded successfully')"
